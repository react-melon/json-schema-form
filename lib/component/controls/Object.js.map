{"version":3,"sources":["component/controls/Object.js"],"names":["ObjectControl","shouldComponentUpdate","nextProps","props","render","schema","uiSchema","name","disabled","readOnly","hidden","meta","title","description","properties","keys","$order","Object","fields","map","key","childName","touched","error","invalid","message","className","propTypes","string","isRequired","object","defaultProps","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAoBqBA,a;;;;;;;;;gCAEjBC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAa,KAAKC,KAAlB,EAAyBD,SAAzB,CAAR;AACH,S;;gCAEDE,M,qBAAS;AAAA,yBAUD,KAAKD,KAVJ;AAAA,gBAGDE,MAHC,UAGDA,MAHC;AAAA,gBAIDC,QAJC,UAIDA,QAJC;AAAA,gBAKDC,IALC,UAKDA,IALC;AAAA,gBAMDC,QANC,UAMDA,QANC;AAAA,gBAODC,QAPC,UAODA,QAPC;AAAA,gBAQDC,MARC,UAQDA,MARC;AAAA,qCASDC,IATC;AAAA,gBASDA,IATC,+BASM,EATN;AAAA,gBAYEC,KAZF,GAYoCP,MAZpC,CAYEO,KAZF;AAAA,gBAYSC,WAZT,GAYoCR,MAZpC,CAYSQ,WAZT;AAAA,gBAYsBC,UAZtB,GAYoCT,MAZpC,CAYsBS,UAZtB;;;AAcL,gBAAMC,OAAOT,SAASU,MAAT,GACP,oCAAeF,UAAf,EAA2BR,SAASU,MAApC,CADO,GAEPC,OAAOF,IAAP,CAAYD,UAAZ,CAFN;;AAIA,gBAAMI,SAASH,KACVI,GADU,CACN,qBAAa;;AAEd,oBAAMC,WAASb,IAAT,IAAgBA,OAAO,GAAP,GAAa,EAA7B,IAAkCc,SAAxC;;AAEA,uBACI;AACI,yBAAKD,GADT;AAEI,0BAAMA,GAFV;AAGI,4BAAQN,WAAWO,SAAX,CAHZ;AAII,8BAAUf,SAASe,SAAT,CAJd;AAKI,iDALJ;AAMI,yCANJ;AAOI,8BAAUb,QAPd;AAQI,8BAAUC;AARd,kBADJ;AAaH,aAlBU,CAAf;;AAlBK,gBAsCEa,OAtCF,GAsCoBX,IAtCpB,CAsCEW,OAtCF;AAAA,gBAsCWC,KAtCX,GAsCoBZ,IAtCpB,CAsCWY,KAtCX;;AAuCL,gBAAMC,UAAUF,WAAWC,KAAX,IAAoBA,MAAME,OAA1C;;AAEA,gBAAMC,YAAY,6BACd,mBADc,EAEd;AACI,+BAAe,CAACF,OADpB;AAEI,iCAAiBA,OAFrB;AAGI,gCAAgBd;AAHpB,aAFc,CAAlB;;AASA,mBACI;AAAA;AAAA,kBAAK,WAAWgB,SAAhB;AAEQd,wBAEQ;AAAA;AAAA;AACI,mCAAU,yBADd;AAEKA;AAFL,iBAFR,GAOM,IATd;AAYQC,8BAEQ;AAAA;AAAA,sBAAG,WAAU,+BAAb;AACKA;AADL,iBAFR,GAMM,IAlBd;AAoBI;AAAA;AAAA,sBAAK,WAAU,2BAAf;AACKK;AADL;AApBJ,aADJ;AA2BH,S;;;;;yBAnFgBlB,a;;;AAwFrBA,kBAAc2B,SAAd,GAA0B;AACtBpB,cAAM,iBAAUqB,MAAV,CAAiBC,UADD;AAEtBvB,kBAAU,iBAAUwB,MAAV,CAAiBD,UAFL;AAGtBxB,gBAAQ,iBAAUyB,MAAV,CAAiBD;AAHH,KAA1B;;AAMA7B,kBAAc+B,YAAd,GAA6B;AACzBzB,kBAAU;AADe,KAA7B;;AAIA,kCAAgB,UAAUD,MAAV,EAAkB;;AAE9B,YAAIA,OAAO2B,IAAP,KAAgB,QAApB,EAA8B;AAC1B,mBAAOhC,aAAP;AACH;AAEJ,KAND","file":"Object.js","sourcesContent":["/**\n * @file object render\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {registerControl} from '../../factory';\nimport shallowEqual from 'melon-core/util/shallowEqual';\nimport Control from './Control';\nimport Field from '../Field';\nimport {getOrderedKeys} from '../../util/getOrderedKeys';\nimport {format} from '../../util/field';\nimport cx from 'classnames';\n\n/**\n * ObjectControl\n *\n * @class\n * @param {*} props 属性\n */\nexport default class ObjectControl extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(this.props, nextProps);\n    }\n\n    render() {\n\n        const {\n            schema,\n            uiSchema,\n            name,\n            disabled,\n            readOnly,\n            hidden,\n            meta = {}\n        } = this.props;\n\n        const {title, description, properties} = schema;\n\n        const keys = uiSchema.$order\n            ? getOrderedKeys(properties, uiSchema.$order)\n            : Object.keys(properties);\n\n        const fields = keys\n            .map(childName => {\n\n                const key = `${name}${name ? '.' : ''}${childName}`;\n\n                return (\n                    <Field\n                        key={key}\n                        name={key}\n                        schema={properties[childName]}\n                        uiSchema={uiSchema[childName]}\n                        control={Control}\n                        format={format}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                    />\n                );\n\n            });\n\n        const {touched, error} = meta;\n        const invalid = touched && error && error.message;\n\n        const className = cx(\n            'ui-control-object',\n            {\n                'state-valid': !invalid,\n                'state-invalid': invalid,\n                'state-hidden': hidden\n            }\n        );\n\n        return (\n            <div className={className}>\n                {\n                    title\n                        ? (\n                            <header\n                                className=\"ui-control-object-title\">\n                                {title}\n                            </header>\n                        )\n                        : null\n                }\n                {\n                    description\n                        ? (\n                            <p className=\"ui-control-object-description\">\n                                {description}\n                            </p>\n                        )\n                        : null\n                }\n                <div className=\"ui-control-object-content\">\n                    {fields}\n                </div>\n            </div>\n        );\n\n    }\n\n\n}\n\nObjectControl.propTypes = {\n    name: PropTypes.string.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired\n};\n\nObjectControl.defaultProps = {\n    uiSchema: {}\n};\n\nregisterControl(function (schema) {\n\n    if (schema.type === 'object') {\n        return ObjectControl;\n    }\n\n});\n"]}