{"version":3,"sources":["component/controls/string/Time.js"],"names":["TimeControl","props","name","value","meta","actions","schema","disabled","readOnly","title","description","error","touched","invalid","message","className","change","e","type","format"],"mappings":";;;;;;;;;;;;;;;;YAiBgBA,W,GAAAA,W;;;;;;;;;;;;;;;;AANhB;;;;;;AAMO,aAASA,WAAT,CAAqBC,KAArB,EAA4B;AAAA,YAG3BC,IAH2B,GAU3BD,KAV2B,CAG3BC,IAH2B;AAAA,YAI3BC,KAJ2B,GAU3BF,KAV2B,CAI3BE,KAJ2B;AAAA,YAK3BC,IAL2B,GAU3BH,KAV2B,CAK3BG,IAL2B;AAAA,YAM3BC,OAN2B,GAU3BJ,KAV2B,CAM3BI,OAN2B;AAAA,YAO3BC,MAP2B,GAU3BL,KAV2B,CAO3BK,MAP2B;AAAA,YAQ3BC,QAR2B,GAU3BN,KAV2B,CAQ3BM,QAR2B;AAAA,YAS3BC,QAT2B,GAU3BP,KAV2B,CAS3BO,QAT2B;AAAA,YAa3BC,KAb2B,GAe3BH,MAf2B,CAa3BG,KAb2B;AAAA,YAc3BC,WAd2B,GAe3BJ,MAf2B,CAc3BI,WAd2B;AAAA,YAkB3BC,KAlB2B,GAoB3BP,IApB2B,CAkB3BO,KAlB2B;AAAA,YAmB3BC,OAnB2B,GAoB3BR,IApB2B,CAmB3BQ,OAnB2B;;;AAsB/B,YAAMC,UAAUD,WAAWD,KAAX,IAAoBA,MAAMG,OAA1C;;AAEA,YAAMC,YAAY,uCAAqB,iBAArB,EAAwCd,KAAxC,CAAlB;;AAEA,eACI;AAAA;AAAA,cAAK,WAAWc,SAAhB;AAEQN,oBACM;AAAA;AAAA;AACE,+BAAU,uBADZ;AAEGA;AAFH,aADN,GAKM,IAPd;AAUQC,0BACM;AAAA;AAAA;AACE,+BAAU,4BADZ;AAEGA;AAFH,aADN,GAKM,IAfd;AAiBI;AACI,0BAAUH,QADd;AAEI,0BAAUC,QAFd;AAGI,sBAAK,KAHT;AAII,wBAAQ,EAACK,gBAAD,EAJZ;AAKI,uBAAOV,SAAS,IAAT,GAAgBG,iBAAhB,GAAiCH,KAL5C;AAMI,0BAAU;AAAA,2BAAKE,QAAQW,MAAR,CAAed,IAAf,EAAqBe,EAAEd,KAAvB,CAAL;AAAA;AANd,cAjBJ;AAyBI,yEAAmBC,IAAnB;AAzBJ,SADJ;AA8BH,K,CAzED;;;;;AA4EA,kCAAgB,kBAAU;;AAEtB,YACIE,OAAOY,IAAP,KAAgB,QAAhB,IACGZ,OAAOa,MAAP,KAAkB,MAFzB,EAGE;AACE,mBAAOnB,WAAP;AACH;AAEJ,KATD","file":"Time.js","sourcesContent":["/**\n * @file TimeControl\n * @author leon <ludafa@outlook.com>\n */\n\nimport React from 'react';\nimport TimePicker from 'melon-timepicker';\nimport {registerControl} from '../../../factory';\nimport ValidityLabel from '../../ValidityLabel';\nimport createStateClassName from '../../../util/createStateClassName';\n\n/**\n * 时间选择器\n *\n * @class\n * @param {*} props 属性\n */\nexport function TimeControl(props) {\n\n    const {\n        name,\n        value,\n        meta,\n        actions,\n        schema,\n        disabled,\n        readOnly\n    } = props;\n\n    const {\n        title,\n        description\n    } = schema;\n\n    const {\n        error,\n        touched\n    } = meta;\n\n    const invalid = touched && error && error.message;\n\n    const className = createStateClassName('ui-control-time', props);\n\n    return (\n        <div className={className}>\n            {\n                title\n                    ? <header\n                        className=\"ui-control-time-title\">\n                        {title}\n                    </header>\n                    : null\n            }\n            {\n                description\n                    ? <p\n                        className=\"ui-control-time-decription\">\n                        {description}\n                    </p>\n                    : null\n            }\n            <TimePicker\n                disabled={disabled}\n                readOnly={readOnly}\n                size=\"xxs\"\n                states={{invalid}}\n                value={value == null ? schema.default : value}\n                onChange={e => actions.change(name, e.value)}\n            />\n            <ValidityLabel {...meta} />\n        </div>\n    );\n\n}\n\n\nregisterControl(schema => {\n\n    if (\n        schema.type === 'string'\n        && schema.format === 'time'\n    ) {\n        return TimeControl;\n    }\n\n});\n"]}