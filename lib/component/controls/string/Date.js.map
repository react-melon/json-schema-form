{"version":3,"sources":["component/controls/string/Date.js"],"names":["DateControl","args","onChange","bind","value","props","name","actions","validate","change","render","schema","meta","disabled","readOnly","title","description","error","touched","invalid","message","className","propTypes","object","isRequired","string","type","format"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAWqBA,W;;;AAEjB,+BAAqB;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AAAA,yDACjB,gDAASA,IAAT,EADiB;;AAEjB,kBAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAFiB;AAGpB;;8BAEDD,Q,2BAAkB;AAAA,gBAARE,KAAQ,QAARA,KAAQ;AAAA,yBAKV,KAAKC,KALK;AAAA,gBAGVC,IAHU,UAGVA,IAHU;AAAA,gBAIVC,OAJU,UAIVA,OAJU;AAAA,gBAQVC,QARU,GAUVD,OAVU,CAQVC,QARU;AAAA,gBASVC,MATU,GAUVF,OAVU,CASVE,MATU;;;AAYdA,mBAAOH,IAAP,EAAaF,KAAb;AACAI,qBAASF,IAAT;AAEH,S;;8BAEDI,M,qBAAS;AAAA,0BAQD,KAAKL,KARJ;AAAA,gBAGDM,MAHC,WAGDA,MAHC;AAAA,gBAIDP,KAJC,WAIDA,KAJC;AAAA,gBAKDQ,IALC,WAKDA,IALC;AAAA,gBAMDC,QANC,WAMDA,QANC;AAAA,gBAODC,QAPC,WAODA,QAPC;AAAA,gBAWDC,KAXC,GAaDJ,MAbC,CAWDI,KAXC;AAAA,gBAYDC,WAZC,GAaDL,MAbC,CAYDK,WAZC;AAAA,gBAgBDC,KAhBC,GAkBDL,IAlBC,CAgBDK,KAhBC;AAAA,gBAiBDC,OAjBC,GAkBDN,IAlBC,CAiBDM,OAjBC;;;AAoBL,gBAAMC,UAAUD,WAAWD,KAAX,IAAoBA,MAAMG,OAA1C;;AAEA,gBAAMC,YAAY,uCACd,iBADc,EAEd,KAAKhB,KAFS,CAAlB;;AAKA,mBACI;AAAA;AAAA,kBAAK,WAAWgB,SAAhB;AAEQN,wBACM;AAAA;AAAA;AACE,mCAAU,uBADZ;AAEGA;AAFH,iBADN,GAKM,IAPd;AAUQC,8BACM;AAAA;AAAA;AACE,mCAAU,6BADZ;AAEGA;AAFH,iBADN,GAKM,IAfd;AAiBI;AACI,8BAAUH,QADd;AAEI,8BAAUC,QAFd;AAGI,0BAAK,KAHT;AAII,8BAAU,CAAC,OAAD,CAJd;AAKI,4BAAQ,EAACK,gBAAD,EALZ;AAMI,0BAAMb,IANV;AAOI,2BAAOF,SAAS,IAAT,GAAgBO,iBAAhB,GAAiCP,KAP5C;AAQI,8BAAU,KAAKF,QARnB,GAjBJ;AA0BI,6EAAmBU,IAAnB;AA1BJ,aADJ;AA+BH,S;;;;;yBAlFgBZ,W;;;AAsFrBA,gBAAYsB,SAAZ,GAAwB;AACpBX,gBAAQ,iBAAUY,MAAV,CAAiBC,UADL;AAEpBpB,eAAO,iBAAUqB;AAFG,KAAxB;;AAKA,kCAAgB,UAAUd,MAAV,EAAkB;;AAE9B,YACIA,OAAOe,IAAP,KAAgB,QAAhB,IACGf,OAAOgB,MAAP,KAAkB,MAFzB,EAGE;AACE,mBAAO3B,WAAP;AACH;AAEJ,KATD","file":"Date.js","sourcesContent":["/**\n * @file Date\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Calendar from 'melon-calendar';\nimport {registerControl} from '../../../factory';\nimport ValidityLabel from '../../ValidityLabel';\nimport createStateClassName from '../../../util/createStateClassName';\n\nexport default class DateControl extends Component {\n\n    constructor(...args) {\n        super(...args);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange({value}) {\n\n        const {\n            name,\n            actions\n        } = this.props;\n\n        const {\n            validate,\n            change\n        } = actions;\n\n        change(name, value);\n        validate(name);\n\n    }\n\n    render() {\n\n        const {\n            schema,\n            value,\n            meta,\n            disabled,\n            readOnly\n        } = this.props;\n\n        const {\n            title,\n            description\n        } = schema;\n\n        const {\n            error,\n            touched\n        } = meta;\n\n        const invalid = touched && error && error.message;\n\n        const className = createStateClassName(\n            'ui-control-date',\n            this.props\n        );\n\n        return (\n            <div className={className}>\n                {\n                    title\n                        ? <header\n                            className=\"ui-control-date-title\">\n                            {title}\n                        </header>\n                        : null\n                }\n                {\n                    description\n                        ? <p\n                            className=\"ui-control-date-description\">\n                            {description}\n                        </p>\n                        : null\n                }\n                <Calendar\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    size=\"xxs\"\n                    variants={['fluid']}\n                    states={{invalid}}\n                    name={name}\n                    value={value == null ? schema.default : value}\n                    onChange={this.onChange} />\n                <ValidityLabel {...meta} />\n            </div>\n        );\n\n    }\n\n}\n\nDateControl.propTypes = {\n    schema: PropTypes.object.isRequired,\n    value: PropTypes.string\n};\n\nregisterControl(function (schema) {\n\n    if (\n        schema.type === 'string'\n        && schema.format === 'date'\n    ) {\n        return DateControl;\n    }\n\n});\n"]}