{"version":3,"sources":["component/controls/string/DateTime.js"],"names":["DateTimeControl","props","schema","value","name","actions","meta","title","description","formatMinimum","formatMaximum","isValid","date","format","time","error","touched","invalid","message","className","change","e","validate","propTypes","object","isRequired","string","type"],"mappings":";;;;;;;;;;;;;;;;sBAmBwBA,e;;;;;;;;;;;;;;;;;;;;AANxB;;;;;;AAMe,aAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,YAGvCC,MAHuC,GAQvCD,KARuC,CAGvCC,MAHuC;AAAA,YAIvCC,KAJuC,GAQvCF,KARuC,CAIvCE,KAJuC;AAAA,YAKvCC,IALuC,GAQvCH,KARuC,CAKvCG,IALuC;AAAA,YAMvCC,OANuC,GAQvCJ,KARuC,CAMvCI,OANuC;AAAA,YAOvCC,IAPuC,GAQvCL,KARuC,CAOvCK,IAPuC;AAAA,YAWvCC,KAXuC,GAevCL,MAfuC,CAWvCK,KAXuC;AAAA,YAYvCC,WAZuC,GAevCN,MAfuC,CAYvCM,WAZuC;AAAA,YAavCC,aAbuC,GAevCP,MAfuC,CAavCO,aAbuC;AAAA,YAcvCC,aAduC,GAevCR,MAfuC,CAcvCQ,aAduC;;;AAiB3CP,gBAAQ,yBAAOA,KAAP,CAAR;AACAA,gBAAQA,MAAMQ,OAAN,KAAkBR,KAAlB,GAA0B,0BAAlC;;AAEA,YAAIS,OAAOT,MAAMU,MAAN,CAAa,YAAb,CAAX;AACA,YAAIC,OAAOX,MAAMU,MAAN,CAAa,UAAb,CAAX;;AArB2C,YAwBvCE,KAxBuC,GA0BvCT,IA1BuC,CAwBvCS,KAxBuC;AAAA,YAyBvCC,OAzBuC,GA0BvCV,IA1BuC,CAyBvCU,OAzBuC;;;AA4B3C,YAAIC,UAAUD,WAAWD,KAAX,IAAoBA,MAAMG,OAAxC;;AAEA,YAAIC,YAAY,uCAAqB,qBAArB,EAA4ClB,KAA5C,CAAhB;;AAEA,eACI;AAAA;AAAA,cAAK,WAAWkB,SAAhB;AAEQZ,oBACM;AAAA;AAAA;AACE,+BAAU,2BADZ;AAEGA;AAFH,aADN,GAKM,IAPd;AAUQC,0BACM;AAAA;AAAA;AACE,+BAAU,gCADZ;AAEGA;AAFH,aADN,GAKM,IAfd;AAiBI;AAAA;AAAA,kBAAK,WAAU,6BAAf;AACI;AACI,0BAAK,IADT;AAEI,2BAAOI,IAFX;AAGI,2BAAOH,aAHX;AAII,yBAAKC,aAJT;AAKI,4BAAQ,EAACO,gBAAD,EALZ;AAMI,8BAAU,qBAAK;AACXZ,gCAAQe,MAAR,CAAehB,IAAf,EAAwBiB,EAAElB,KAA1B,SAAmCW,IAAnC;AACAT,gCAAQiB,QAAR,CAAiBlB,IAAjB;AACH,qBATL,GADJ;AAWI;AACI,0BAAK,IADT;AAEI,2BAAOU,IAFX;AAGI,4BAAQ,EAACG,gBAAD,EAHZ;AAII,8BAAU,qBAAK;AACXZ,gCAAQe,MAAR,CAAehB,IAAf,EAAwBQ,IAAxB,SAAgCS,EAAElB,KAAlC;AACAE,gCAAQiB,QAAR,CAAiBlB,IAAjB;AACH,qBAPL;AAXJ,aAjBJ;AAqCI,yEAAmBE,IAAnB;AArCJ,SADJ;AA0CH,K,CA7FD;;;;;AA+FAN,oBAAgBuB,SAAhB,GAA4B;AACxBrB,gBAAQ,iBAAUsB,MAAV,CAAiBC,UADD;AAExBtB,eAAO,iBAAUuB;AAFO,KAA5B;;AAKA,kCAAgB,UAAUxB,MAAV,EAAkB;;AAE9B,YACIA,OAAOyB,IAAP,KAAgB,QAAhB,IACGzB,OAAOW,MAAP,KAAkB,WAFzB,EAGE;AACE,mBAAOb,eAAP;AACH;AAEJ,KATD","file":"DateTime.js","sourcesContent":["/**\n * @file DateTimeControl\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {PropTypes} from 'react';\nimport Calendar from 'melon-calendar';\nimport TimePicker from 'melon-timepicker';\nimport {registerControl} from '../../../factory';\nimport moment from 'moment';\nimport createStateClassName from '../../../util/createStateClassName';\nimport ValidityLabel from '../../ValidityLabel';\n\n/**\n * DateTimeControl\n *\n * @class\n * @param {Object} props 属性\n */\nexport default function DateTimeControl(props) {\n\n    let {\n        schema,\n        value,\n        name,\n        actions,\n        meta\n    } = props;\n\n    const {\n        title,\n        description,\n        formatMinimum,\n        formatMaximum\n    } = schema;\n\n    value = moment(value);\n    value = value.isValid() ? value : moment();\n\n    let date = value.format('YYYY-MM-DD');\n    let time = value.format('HH:mm:ss');\n\n    let {\n        error,\n        touched\n    } = meta;\n\n    let invalid = touched && error && error.message;\n\n    let className = createStateClassName('ui-control-datetime', props);\n\n    return (\n        <div className={className}>\n            {\n                title\n                    ? <header\n                        className=\"ui-control-datetime-title\">\n                        {title}\n                    </header>\n                    : null\n            }\n            {\n                description\n                    ? <p\n                        className=\"ui-control-datetime-decription\">\n                        {description}\n                    </p>\n                    : null\n            }\n            <div className=\"ui-control-datetime-content\">\n                <Calendar\n                    size=\"xs\"\n                    value={date}\n                    begin={formatMinimum}\n                    end={formatMaximum}\n                    states={{invalid}}\n                    onChange={e => {\n                        actions.change(name, `${e.value} ${time}`);\n                        actions.validate(name);\n                    }} />\n                <TimePicker\n                    size=\"xs\"\n                    value={time}\n                    states={{invalid}}\n                    onChange={e => {\n                        actions.change(name, `${date} ${e.value}`);\n                        actions.validate(name);\n                    }} />\n            </div>\n            <ValidityLabel {...meta} />\n        </div>\n    );\n\n}\n\nDateTimeControl.propTypes = {\n    schema: PropTypes.object.isRequired,\n    value: PropTypes.string\n};\n\nregisterControl(function (schema) {\n\n    if (\n        schema.type === 'string'\n        && schema.format === 'date-time'\n    ) {\n        return DateTimeControl;\n    }\n\n});\n"]}